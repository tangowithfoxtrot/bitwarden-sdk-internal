name: Build @bitwarden/sdk-internal

on:
  pull_request:
  push:
    branches:
      - "main"
      - "rc"
      - "hotfix-rc"
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: crates/bitwarden-wasm-internal

jobs:
  build:
    name: Building @bitwarden/sdk-wasm-internal
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set version (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo REF_NAME="${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo SHA="${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Set env variables (Branch/Tag)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo REF_NAME="${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo SHA="${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Set version
        run: |
          export SDK_VERSION="${REF_NAME} (${SHA:0:7})"
          echo "SDK_VERSION='${SDK_VERSION}'" >> $GITHUB_ENV
          echo "SDK_VERSION='${SDK_VERSION}'"

      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"

      - name: Install dependencies
        run: npm i -g binaryen

      - name: Set Rust Toolchain
        id: toolchain
        shell: bash
        run: |
          RUST_TOOLCHAIN="$(grep -oP '^channel.*"(\K.*?)(?=")' ${{ github.workspace }}/rust-toolchain.toml)"
          echo "RUST_TOOLCHAIN=${RUST_TOOLCHAIN}" | tee -a "${GITHUB_OUTPUT}"

      - name: Install rust
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203 # stable
        with:
          toolchain: "${{ steps.toolchain.outputs.RUST_TOOLCHAIN }}"
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          key: wasm-cargo-cache

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli --version 0.2.100

      - name: Build
        run: ./build.sh -r

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: sdk-internal
          path: ${{ github.workspace }}/crates/bitwarden-wasm-internal/npm/*
          if-no-files-found: error

  # trigger-wasm-publish:
  #   name: Trigger WASM publish
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-24.04
  #   needs: build
  #   steps:
  #     - name: Login to Azure - CI Subscription
  #       uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
  #       with:
  #         creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

  #     - name: Retrieve github PAT secrets
  #       id: retrieve-secret-pat
  #       uses: bitwarden/gh-actions/get-keyvault-secrets@main
  #       with:
  #         keyvault: "bitwarden-ci"
  #         secrets: "github-pat-bitwarden-devops-bot-repo-scope"

  #     - name: Trigger WASM publish
  #       uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
  #       with:
  #         github-token: ${{ steps.retrieve-secret-pat.outputs.github-pat-bitwarden-devops-bot-repo-scope }}
  #         script: |
  #           await github.rest.actions.createWorkflowDispatch({
  #             owner: 'bitwarden',
  #             repo: 'sdk-internal',
  #             workflow_id: 'publish-wasm-internal.yml',
  #             ref: 'main',
  #           })
